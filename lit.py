import re
import os

def count(text):
    pattern  = '(\d+\.?\s*((библи[оo]гр[аa]фич[eе][cс]кий [cс]пи[cс][oо]к)|([cс]пи[сc][oо]к (и[cс]п[oо]льз\w* )?(и[сc]т[oо]чник\w*|лит[eе][pр][aа]ту[pр]ы))|((и[cс]п[oо]льз\w* )?(лит[eе][pр][aа]ту[pр][aа]|и[cс]т[oо]чники))):?\.?\s*[\[\d])'
    text = text.lower()
    match = re.findall(pattern, text)#поиск заголовка
    if len(match) > 0:
        match = match[len(match)-1]#нужен заголовок, который в конце, если каким-то образом их нашлось несколько
    else:
        return None
    #ищем библиографический список, список литературы, литературу и источники в найденном тексте
    temp = match[0]
    #в найденном вхождении нужную группу заменяем на такой разделитель
    if match[2] != '':
        temp = temp.replace(match[2],'@@@@@')
    elif match[3] != '':
        temp = temp.replace(match[3],'@@@@@')
    elif match[6] != '':
        temp = temp.replace(match[6],'@@@@@')
    #после разбиения интеерсует только последняя часть текста, т.к. предполагается, что она идёт после заголовка для литературы
    text = text.replace(match[0],temp)#замена в тексте вхождения слов "литература" или "список литературы" и т.п. на то же самое вхождение, но с собачками
    text = text.split('@@@@@')
    text = text[len(text)-1]
    pat = '\s+приложение (а|\d)'#в приложениии могут быть пронумерованы строки, поэтому нужно его убрать
    res = re.search(pat,text)
    if res != None: #приложение обрезается, если оно есть
        text = text.split(res.group(0))
        text = text[0]
    mas = text.split('\n')#разбиваем список на массив строк.
    pat = '^\s*\[?\d+[.)\]]*\w*'#потому что правильная нумерация только в начале строки
    ind = 0
    ind2 = 0
    count = 0
    count2 = 0
    skip = False #отвечает за вероятный пропуск одного из номеров в списке литературы
    for v in mas:
        res = re.search(pat,v)
        if res is not None:
            value = res.group(0)
            vl = re.search('^\s*\[?\d+[.)\]]+[0-9]',value)#поиск даты
            if vl != None:#если в нумерацию источников попала дата, то пропустить
                continue
            res = (re.search('^\s*\[?\d+',value)).group(0)#обрезаем лишние символы справа
            res = res[res.find('[')+1:]#если есть скобочка, то обрезать её
            if int(res) - ind == 1:#здесь идёт порядковый счёт списков литературы.
                skip = False #если нумерация восстановилась, то прекращаем параллельно считать тот вариант, в котором пропущен один пункт
                count2 = 0
                count += 1
                ind += 1
                ind2 = ind
            if not skip and int(res) - ind2 == 2:#если нам кажется, что пропустили 1 пункт, запускаем второй счётчик
                skip = True
                count2 = 2
                ind2 += 2
            elif int(res) - ind2 == 1:#если уже решили, что нумерация сбилась, то считается второй счётчик
                count2 += 1
                ind2 +=1
    count += count2 #сумма нормальной и сбитой нумерации
    return count
